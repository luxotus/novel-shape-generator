!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);const n=new THREE.Scene,o=window.innerWidth/window.innerHeight,i=new THREE.PerspectiveCamera(75,o,.1,1e3),a=new THREE.WebGLRenderer;a.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(a.domElement);const s=new class{constructor(e,t){this.details=e,this.shapes=void 0!==t?t:[],this.createShape()}createShape(){const e={material:new THREE.MeshBasicMaterial(this.details.material)};switch(this.details.type){case"cube":e.geometry=new THREE.BoxBufferGeometry(...this.details.geometry);break;case"circle":e.geometry=new THREE.CircleBufferGeometry(...this.details.geometry);break;case"cone":e.geometry=new THREE.ConeBufferGeometry(...this.details.geometry);break;case"cylinder":e.geometry=new THREE.CylinderBufferGeometry(...this.details.geometry);break;case"dodecahedron":e.geometry=new THREE.DodecahedronBufferGeometry(this.details.radius);break;case"plane":e.geometry=new THREE.PlaneBufferGeometry(...this.details.geometry);break;default:e.geometry=new THREE.BoxGeometry(...this.details.geometry)}void 0!==e.geometry&&(e.mesh=new THREE.Mesh(e.geometry,e.material),this.shapes.push(e))}}({type:"dodecahedron",geometry:[2,2,2],material:{color:65535},radius:1});n.add(s.shapes[0].mesh),i.position.z=5,function e(){requestAnimationFrame(e),s.shapes[0].mesh.rotation.x+=.01,s.shapes[0].mesh.rotation.y+=.01,a.render(n,i)}()}]);