!function(e){var t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);const r=new THREE.Scene,n=new THREE.Clock,s=window.innerWidth/window.innerHeight,o=new THREE.PerspectiveCamera(45,s,.1,1e4),a=new THREE.PointLight(10066329),d=new THREE.AmbientLight(5592405),h=new THREE.WebGLRenderer,l=new class{constructor(e,t){this.details=e,this.shapes=void 0!==t?t:[],this.typeExits=this.constructor.isRadiusOnly(this.details.type)||this.isGeometryOnly(this.details.type),""!==this.details.type&&void 0!==this.details.type&&this.typeExits||(this.details.type=this.constructor.randomShapeType()),this.createShape()}static randomShapeType(){const e=["Dodecahedron","Icosahedron","Octahedron","Tetrahedron","Box","Circle","Cone","Cylinder","Plane","Ring","Sphere","Torus","TorusKnot"];return e[Math.floor(Math.random()*e.length)]}static isRadiusOnly(e){return["Dodecahedron","Icosahedron","Octahedron","Tetrahedron"].includes(e)}static geometrySideLengths(e){return{Box:3,Circle:2,Cone:3,Cylinder:4,Plane:3,Ring:3,Sphere:3,Torus:4,TorusKnot:4}[e]}fillGeometry(e,t){const i=this.constructor.geometrySideLengths(this.details.type);let r=this.details.geometry.length>0?this.details.geometry:[];if(i>this.details.geometry.length){const n=i-this.details.geometry.length,s=Array(n).fill(0).map(()=>Math.floor(Math.random()*(e-t))+t);r=r.concat(s)}return r}isGeometryOnly(e){return void 0!==this.constructor.geometrySideLengths(e)}createShape(){const e={material:new THREE.MeshLambertMaterial(this.details.material)};if(this.constructor.isRadiusOnly(this.details.type)&&(e.geometry=new THREE[`${this.details.type}BufferGeometry`](this.details.radius)),this.isGeometryOnly(this.details.type)){const t=this.constructor.geometrySideLengths(this.details.type)!==this.details.geometry.length?this.fillGeometry(this.details.size.max,this.details.size.min):this.details.geometry;e.geometry=new THREE[`${this.details.type}BufferGeometry`](...t)}void 0!==e.geometry&&(e.mesh=new THREE.Mesh(e.geometry,e.material),this.shapes.push(e))}}({type:"",geometry:[],material:{color:65535},size:{max:100,min:10},radius:100});o.position.y=160,o.position.z=400,r.add(o),a.position.set(0,300,200),r.add(a),r.add(d),h.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(h.domElement),r.add(l.shapes[0].mesh),o.lookAt(l.shapes[0].mesh.position),function e(){requestAnimationFrame(e),l.shapes[0].mesh.rotation.x-=.01,l.shapes[0].mesh.rotation.y-=n.getDelta(),h.render(r,o)}()}]);